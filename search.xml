<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[tar工具]]></title>
      <url>/2018/01/09/tar%E5%B7%A5%E5%85%B7/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">tar：-c -f ---------(创建打包文件)</span><br><span class="line">         -v -f ----------(查看过程)</span><br><span class="line">         -t -f -----------(预览打包的文件列表)</span><br><span class="line">         -x -f ---------- (解压和解包)</span><br><span class="line">         -r -r -----------(追加)不能追加压缩文件</span><br><span class="line">压缩；</span><br><span class="line"># tar zcvf etc.tav.gz   /etc/</span><br><span class="line"># tar jcvf etc.tar.bz2  /etc/                 </span><br><span class="line"># tar Jcvf etc.tar.xz    /etc/</span><br><span class="line">压缩 ; -T, -X</span><br><span class="line"># tar Jcvf   file.tar.xz -T(file.txz)   list.txt --------将list.txt里文件目录分别压缩到file.txz里。</span><br><span class="line"># tar Jcvf   file.tar.xz -X  /etc/....                          排除/etc/目录下的指定列表，进行压缩。</span><br><span class="line">分割（大的tar文件）</span><br><span class="line"># split       -b       size     -d       file-name      prefix-name</span><br><span class="line">-b---分割的块的数量  </span><br><span class="line">size---分割的块的大小  </span><br><span class="line">-d---分割后的文件尾部排序数字  </span><br><span class="line">file-name---指定的分割文件  </span><br><span class="line">prefix-name---定义分割后的文件、前缀名称</span><br><span class="line"># split -b 1M etc.tar.bz2  etcsplit        后缀为aa、ab、ac......</span><br><span class="line"># split -d 1M etc.tar.bz2  etcsplit        后缀为00、01、02......</span><br><span class="line">合并(将分割的文件合并到一处)</span><br><span class="line"># cat etcsplit0* &gt; etc2.tar.bz2------ 要与源文件后缀一样</span><br><span class="line">解压</span><br><span class="line"># tar xvf etc.tar.xz      -C     /root/</span><br><span class="line"># tar xvf etc.tar.bz 2  -C     /root/</span><br><span class="line"># tar xvf etc.tar.gz     -C     /root/</span><br><span class="line">解压时，tar可以用tar  xvf解压三种以xz、bz2、gz后缀的压缩文件；</span><br><span class="line">- 大C为解压到指定目录时使用，解压到当前目录时不用加-大C。</span><br></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> tar </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[创建RAID设备]]></title>
      <url>/2018/01/09/%E5%88%9B%E5%BB%BARAID%E8%AE%BE%E5%A4%87/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">添加20、30、40、50G磁盘</span><br><span class="line">#fdisk /dev/sda</span><br><span class="line">#mdadm -C /dev/md0 -n3 -l5 -x1 /dev/sd&#123;a6,b,c1,d1&#125;</span><br><span class="line">#cat /proc/mdstat </span><br><span class="line">#which -n1 cat /proc/mdstat</span><br><span class="line">#mdadm -Ds /dev/md0</span><br><span class="line">#mdadm -Ds /dev/md0 &gt;/etc/mdadm.conf</span><br><span class="line">#mkdir /mnt/raid</span><br><span class="line">#mount /dev/md0 /mnt/raid</span><br><span class="line">#cd /mnt/raid</span><br><span class="line">#cp /etc/fstab /mnt/raid/f1</span><br><span class="line">#cp /etc/fstab /mnt/riad/f2</span><br><span class="line">#cp /var/log /mnt/riad/bigfile</span><br><span class="line">#cat f3</span><br><span class="line">#vim /etc/fstab</span><br><span class="line">#cat f1</span><br><span class="line">#lsblk</span><br><span class="line">#blkid</span><br><span class="line">#mdadm -D /dev/md0</span><br><span class="line">#mdadm /dev/md0 -f /dev/sdb1</span><br><span class="line">#mdadm /dev/md0 -r /dev/sdb1</span><br><span class="line">#mdadm /dev/md0 -a /dev/sdd1</span><br><span class="line">#mdadm -G /dev/md0 -a /dev/sdd2</span><br><span class="line">#mdadm /dev/md0 -a /dev/sdd2</span><br></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-86b9ff56e2c7600a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加完成.png"><br>]</p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-07c630ef722065c6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建主分区.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-a3f87d9f4f39da14.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="文件系统类型.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-922a2af95cbf1464.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="分区完成.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-7ac4b449902eca73.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建raid5.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-264adc8d036d9cc3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看详细信息.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-0301fcb624e9e0f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看进程.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-4625aa0815d5a5a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建完成.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-66d7fd57721795f6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建配置文件.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-a56e6a2400598203.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="格式化.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-fc757d4fc076d86d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="编写挂载路径.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-47b9e81afd1b3c81.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="保存挂在路径，创建挂载点.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-76f809340f64fb52.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看信息.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-38de0a412d6c06fa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="sdc1模拟故障.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-ddde17f720a937de.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="自动修复状态.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-8c5a33799513506d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修复状态.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-d3e0d0e54d02fb23.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="自动修复完成，sdc1无法使用.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-819e3b82a69d1615.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="移除并查看.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-e3f2727078fc56a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="QQ截图20170622100410.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-556b66ee3f9a5c5b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="移除后，查看挂载信息.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-0030e7a61d4a7013.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看RAID信息.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-e838443eab2a0523.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看性能.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-6d9fd3754da3589b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加sdb.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-91e78af3f6b6e592.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="移除后的状态.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-947bae5b16d73514.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加磁盘.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-c2173dab33b8c38d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看添加状态.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-47cbda8b92e603bf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加完成.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-72194fa080a30b8d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加备用磁盘.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-4391c667fcc39641.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加备用完成.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-916304b6217e6677.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="分区sdd2.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-452a30daa7f349e1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="未能同步.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-9f72a9143d9b40ca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="同步.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-6cf202455f5326c0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-45578825126d94b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加sdd2进度.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-82f28eb536e4cdb1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加sdd2完成.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-929abdb4aecb2466.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加备用sdd2.png"></p>
]]></content>
      
        
        <tags>
            
            <tag> RAID </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[逻辑卷及扩展逻辑卷]]></title>
      <url>/2018/01/08/%E9%80%BB%E8%BE%91%E5%8D%B7%E5%8F%8A%E6%89%A9%E5%B1%95%E9%80%BB%E8%BE%91%E5%8D%B7/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">准备好磁盘空间，添加/dev/sda、/dev/sde 、 /dev/sdf，将磁盘分区，/dev/sda7、/dev/sde1，留一个磁盘、/dev/sdf;</span><br></pre></td></tr></table></figure>
<h6 id="创建逻辑卷"><a href="#创建逻辑卷" class="headerlink" title="创建逻辑卷"></a>创建逻辑卷</h6><pre><code>1、创建物理卷
# pvcreate /dev/sd{a7,e1}
#pvs
#pvdisplay
2、创建卷组
#vgcreate  -s 16M vg0 /dev/sd{a7,e1}
#vgs
#vgdisplay
3、创建逻辑卷
#lvcreate -n lv0 -l  100% vg0
#lvs
#lvdisplay
#ll /dev/vg0/lv0
#ll /dev/mapper/vg0-lv0
4、配置文件
#vim /etc/fstab
5、创建文件夹
#mkdir /mnt/lv0
6、挂载逻辑卷
#mount /dev/vg0/lg0 /mnt/lv0
7、查看挂载点，是否已经挂载
#df -h
#lvdisplay
8、拷贝文件到逻辑卷上
#cp /etc/fstab /mnt/lv0
#cp /var/log/messages /mnt/lv0
9、查看文件
#cd /mnt/lv0
#cat /fstab
10、测速
dd if=/dev/zero of=/mnt/lv0/bigfile bs=1M count=1024
dd if=/mnt/lv0/bingfile of=/dev/null 
创建完成；
</code></pre><p>######扩展逻辑卷</p>
<pre><code>1、扩展物理卷
#pvcreate /dev/sdf
#pvs
#pvdisplay
2、添加卷组
#vgcreate vg0 /dev/sdf
#vgdisplay
#vgs
#df -h
3、扩展逻辑卷
#lvextent -l +1000 /dev/vg0/lv0
#lvdisplay
#df -h
4、同步文件系统
#resize2fs /dev/vg0/lv0
#df -h
#lvdisplay
5、查看文件系统及逻辑卷大小,将剩余的空间全部使用
#lvextend -r -l +100%free /dev/vg0/lv0
#df -h
#lvdisplay
</code></pre><p><img src="http://upload-images.jianshu.io/upload_images/6132998-0077cbef58b68fac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加sde,sdf磁盘分区.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-1e4f1b97c35b0e13.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建物理磁盘，查看信息.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-7cdad316b49a5df6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建卷组，查看信息.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-162be295c56ff373.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建逻辑卷，查看信息.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-b9446ed0ef80a6c0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="路径.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-3b2ecef5df59d047.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="两个软连接.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-9c2edebc0ec1ae1d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建文件系统.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-a9d8925d3ff17a6a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看文件系统.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-85d0c552a3c4bae8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加配置文件.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-de46760ba447bd1c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建文件夹，挂载，查看.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-ca52689288706c3d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="测速.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-610bdde12c6dec86.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="扩展逻辑分区1.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-6b6a477ef643da0d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看详情2.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-598c442b61b2cd21.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加到逻辑卷3.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-d904016a7b7ff38d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看逻辑卷磁盘空间.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-20402eeb54b7e2f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="扩展逻辑卷查看是否同步.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-f732a4bb9c511571.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="同步文件系统.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-3081b9aade12a93f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看 逻辑卷剩余空间.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-471b192407b008fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="使用逻辑卷剩余空间，扩展完成.png"></p>
]]></content>
      
        
        <tags>
            
            <tag> 逻辑卷 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vsftpd]]></title>
      <url>/2018/01/08/vsftpd/</url>
      <content type="html"><![CDATA[<h6 id="Centos7-3安装Vsftpd服务；"><a href="#Centos7-3安装Vsftpd服务；" class="headerlink" title="Centos7.3安装Vsftpd服务；"></a>Centos7.3安装Vsftpd服务；</h6><pre><code>1、准备好yum源路径、检查光盘是否挂载及网络状态；
2、用rpm安装vsftpd服务程序包；
3、查找启动vsftpd服务配置文件(vsftpd.service);
4、查看vftpd网络端口是否开启；
5、#systemctl start vsftpd.service启动vsftpd服务；
6、查看vftpd网络端口是否开启；
7、#systemctl enable vsftpd启动下次开启依然启动功能；
8、#systemctl is-enabled vsftpd检查上一条命令是否生效；
9、查看共享文件夹/var/ftp;
10、#iptables -vnL查看防火墙是否开启状态；
11、#systemctl stop firewalld.service关闭防火墙;
12、#iptables -vnL查看防火墙是否开启状态；
13、#systemctl disable firewalld.service下次启动虚拟机防火墙依然在关闭状态；
14、#在/var/ftp/pub/目录下建一个ftp.txt文件；
15、关闭防火前后进入ftp站点，查看是否能进入；
16、配置yum原路径，挂在盆地光盘；
17、将Centos7光盘拷贝到/var/ftp/pub/7/目录下；
18、将Centos6光盘拷贝到/var/ftp/pub/6/目录下；
19、访问ftp站点，是否成功；
20、安装Vsftpd、完成；
</code></pre><p><img src="http://upload-images.jianshu.io/upload_images/6132998-6b8b2b1cea482c07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看光盘是否挂载"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-8aadd2e27d0b665c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="用rpm安装vsftpd文件包"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-bc643c93a3990de0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查找启动vsftpd服务配置文件"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-a9b4347ba4bf2eaa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看vftpd网络端口启动前、启动后，是否开启"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-7108769dbf011b47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="启动vsftpd服务"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-dd77697428eebccf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看vsftpd共享目录位置"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-a13dc2131a995069.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看防火墙状态，是否开启"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-883fec34f1fff53c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="停止防火墙服务及查看防火墙状态"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-da99e981dd9771fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="禁用防火墙"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-c657c3954a7d9f6f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="在/var/ftp/pub/目录下创建一个ftp.txt文档"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-aa9f7e4476b6dd4b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="网页窗口输入ftp://192.168.239.131，查看是否能进入ftp站点 "></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-eb57acf3128bd35f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="配置yum原路径"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-262c0ef677ccdeac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="将Centos7光盘拷贝到/var/ftp/pub/7/目录下"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-1448575102d90c2d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="进入ftp查看"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-4826256023a0ba2f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="安装完成"></p>
<h6 id="Centos6-9安装Vsftpd-跟上述类似；"><a href="#Centos6-9安装Vsftpd-跟上述类似；" class="headerlink" title="Centos6.9安装Vsftpd,跟上述类似；"></a>Centos6.9安装Vsftpd,跟上述类似；</h6><pre><code>/etc/rc.d/init.d/vsftpd 服务脚本名
#netstat -ntl查看端口;
/etc/rc.d/init.d/vsftpd启用vsftpd服务;
#service vsftpd start启用vsftpd服务;
#service iptables stop马上禁用防火墙;
#chkconfig iptables off下次依然关闭防火墙;
将/misc/cd/里的文件拷贝/var/ftp/pub/6..7;
在六七的当前目录下，cp /misc/cd/repo....  .  -r;
拷贝完后用yum repolist 命令查看包文件列表属性文件;
</code></pre>]]></content>
      
        
        <tags>
            
            <tag> 共享文件系统，vsftpd </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[rpm包管理工具，Lib64库文件修复]]></title>
      <url>/2018/01/08/rpm%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%EF%BC%8CLib64%E5%BA%93%E6%96%87%E4%BB%B6%E4%BF%AE%E5%A4%8D/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、软件包基础;</span><br><span class="line">2、rpm包管理;</span><br><span class="line">3、移动lib64库文件修复过程：</span><br><span class="line">4、卸载内核修复过程</span><br></pre></td></tr></table></figure>
<ul>
<li><p>1、软件包基础</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">软件运行与编译：</span><br><span class="line">ABI:应用程序二进制接口</span><br><span class="line">API:应用程序编程接口</span><br><span class="line">静态、动态链接</span><br></pre></td></tr></table></figure>
</li>
<li><p>二进制应用程序的组成部分：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">二进制文件、库文件、配置文件、帮助文件</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>二进制文件<br><img src="http://upload-images.jianshu.io/upload_images/6132998-1adda484d623a0f3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ls二进制文件，依赖于库文件，查看ls二进制文件which ls--,file /bin/ls"><br>库文件<br><img src="http://upload-images.jianshu.io/upload_images/6132998-8139b3425118d34a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="lib64库文件"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">配置文件</span><br><span class="line">有些服务、软件较大，复杂的程序需要通过配置文件来执行实现特性、通过修改配置文件修改来影响程序的运行。(/etc/...)</span><br><span class="line"></span><br><span class="line">帮助文件</span><br><span class="line">……</span><br></pre></td></tr></table></figure>
<ul>
<li>包命名;<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">源代码：name-VERSION.tar.gz|bz2|xz</span><br><span class="line">VERSION版本:major、minor、release发行</span><br><span class="line">rmp包命名方式：</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-ec4369dae01b0169.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="包名称、版本号、编译者后加注、cpu架构"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">包分类和拆包</span><br><span class="line">Application-VERSION-ARCH.rpm:  主包</span><br><span class="line">Application-devel-VERSION-ARCH.rpm  开发子包（开发类放置devel）</span><br><span class="line">Application-utils-VERSION-ARHC.rpm  其它子包（应用相关放置utils）</span><br><span class="line">Application-libs-VERSION-ARHC.rpm  其它（与库相关放置libs）</span><br><span class="line">包之间：可存在依赖关系，甚至循环关系</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">解决依赖包管理工具：</span><br><span class="line">yum: rpm包管理器的前段工具</span><br><span class="line">apt-get:deb包管理器前端工具</span><br><span class="line">zypper:suse上的rpm前端管理工具</span><br><span class="line">dnf:Fedora 18+ rmp包管理器前端管理工具</span><br></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-00d3d718392aa193.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="rpm.安装包依赖性。"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查看二进制程序所依赖的库文件</span><br><span class="line">ldd /path/to/binar_FILE</span><br></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-bc1e0bf0758cb571.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看ls所依赖的库文件ldd命令"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">管理及查看本机装载的库文件</span><br><span class="line">ldconfing</span><br><span class="line">/sbin/ldconfig -p:显示本机已缓存的所有可用库文件名及文件路径映射关系</span><br><span class="line">配置路径：/etc/ld.so.conf,/etc/ld.so.conf.d/*.conf</span><br><span class="line">缓存文件：/etc/ld.so.cache</span><br><span class="line">/etc/ld.so.conf.d/*.conf---配置文件，当使用第三方软件，库文件加载，指定方在一个目录里，需要单独编一个配置文件、将路径编写到配置文件。</span><br><span class="line">保存后需执行#ldconfig ，读取内容后生效。</span><br><span class="line">ldconfig -p 可以查看已经加载到内存的库文件路径，库文件信息。</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">包管理器</span><br><span class="line">debian；deb文件，dpkg包管理器</span><br><span class="line">redhat；rpm文件，rpm包管理器</span><br><span class="line"> redhat Package Manager(rpm)</span><br><span class="line">内核版本一般用偶数版本，奇数版本不稳定测试开发阶段。</span><br><span class="line">1、包文件的组成</span><br><span class="line">文件内容（文件列表、路径，元数据，一些脚本）</span><br><span class="line">RPM包内的文件</span><br><span class="line">RPM的元数据，</span><br><span class="line">安装或卸载时运行的脚本</span><br><span class="line">2、数据库（公共）：/var/lib/rpm（安装好的包的信息）</span><br><span class="line">程序包名称及版本</span><br><span class="line">依赖关系</span><br><span class="line">功能说明</span><br><span class="line">包安装后生成的文件路径及效验码信息</span><br><span class="line">程序包的来源</span><br><span class="line">管理程序包的方式</span><br><span class="line">使用包管理器：rpm</span><br></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-b96212c1d29cc0c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="数据库--安装包的信息。不能随意删除，删除将不能管理包。"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-3b62e5794591bfc4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="rpm命令"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">使用前端工具：yum,dnf</span><br><span class="line">获取程序包的途径:</span><br><span class="line">1、系统发行版的光盘或官方的服务器：</span><br><span class="line">Centos镜像：</span><br><span class="line">https://www.centos.org/download/</span><br><span class="line">http://mirrors.aliyun.com</span><br><span class="line">http://mirrors.sohu.com</span><br><span class="line">http://mirrors.163.com</span><br><span class="line">2、项目官方站点</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-a997cd061256b61f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="官方站点"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-fe85cbc2bab0ef19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="？"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-7031911550ba2fe6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="md5 效验"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-9be26cd27b761a69.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="md5 效验，输入命令。"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3、第三方组织（软件）</span><br><span class="line">光盘里不带的软件放到epel源里（官网），企业版额外的包。</span><br><span class="line">搜索引擎 ：专门搜索安装包；</span><br><span class="line">http://pkgs.org</span><br><span class="line">http://rpmfind.net</span><br><span class="line">http://rpm.pbone.net</span><br><span class="line">https://sourceforge.net/</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">4、自己制作</span><br><span class="line">rpmbuild、FPM工具自作安装包。</span><br><span class="line"></span><br><span class="line">###2、rpm包管理</span><br><span class="line">Centos系统上使用rpm命令管理程序包：</span><br><span class="line">rpm  [option..]  file</span><br><span class="line">       -i  --install ---  安装</span><br><span class="line">      -v或vv(更详细)---  显示过程</span><br><span class="line">      -h--------------- 进度  </span><br><span class="line">      -e--------------- 卸载</span><br></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-584768a6de7ce64f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="卸载时只需写包名"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[install-options]</span><br><span class="line">--test:测试安装，但不真正执行安装，即dry run模式、模拟安装</span><br><span class="line">--nodeps:忽落依赖关系（安装时，后续依赖的包安装、否则无法运行）A依赖于B 安装顺序，先安装B后安装A。卸载时，先卸载A，后卸载B。</span><br><span class="line">--replacepkgs | replacefiles 替换、覆盖安装</span><br><span class="line">--oldpackage ：降级</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-faf8441535b9bd69.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="降级使用，内核并存"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /boot/grup/grup.conf 执行命令，可以查看当前Linux运行那个内核；</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-8a8a460125131c0d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看运行内核"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-35356da0c3c0bedb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="删除内核"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">删除以后查看当前运行内核是还是还是删除的在运行，内和放在内存和磁盘两个地方，删除的是磁盘里的。内核还在内存中，才重启后才会消失。（uname -r）</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> rpm &#123;-U|--upgrade&#125; [install-options]  PACKAGE_FILE ...</span><br><span class="line">安装有旧版程序包，则“升级”</span><br><span class="line">如果不存在旧版程序包，则“安装”</span><br><span class="line">升级会覆盖旧内核，生产中最好不使用升级，使用i安装。</span><br><span class="line"> rpm &#123;-F|--freshen&#125; [install-options]  PACKAGE_FILE ...</span><br><span class="line">安装有旧版程序包，则“升级”</span><br><span class="line">如果不存在旧版程序包，则不执行升级操作</span><br><span class="line">--force-----强制安装，只能在安装升级时候用，卸载时不能使用。</span><br><span class="line">rpm -e kernel --nodeps(不检查相关性 忽略依赖关系 不检查依赖性关系)----卸载内核</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">--nosignature:不检查来源合法性</span><br><span class="line">--nodigest:不检查包完整性</span><br><span class="line">-noscriptts:不执行程序脚本</span><br><span class="line">%pre:安装前脚本-----nopre</span><br><span class="line">%post:安装后脚本----nopst</span><br><span class="line">%preun:卸载前脚本---nopreun</span><br><span class="line">%postun: 卸载猴脚本---nopostun</span><br></pre></td></tr></table></figure>
<ul>
<li>（1）不要对内核做升级操作：Linux支持多内核版本并存，因此，可以对其直接安装新版本内核。</li>
<li><p>（2）如果源程序包的配置文件安装后增被修改，升级时，新版本的提供的同一个配置文件并不会直接覆盖老版本的配置文件，而把新版本的文件重命名（FILENAME.RPMNEW）后保留。</p>
</li>
<li><p>包查询</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rpm&#123;-p| --query&#125;[select-options][query-option]</span><br><span class="line">rpm &#123; - p |——查询&#125;[选项][查询选项]</span><br><span class="line">rpm -p 【包名】</span><br><span class="line">[select-options]</span><br><span class="line">-a；所有包  ----加上管道grep可以模糊搜索</span><br></pre></td></tr></table></figure>
</li>
<li><p>-f:查看指定的文件有那个程序包安生成，来自哪个安装包。</p>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-55451353f6e88c55.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="用rm删除后可以用rpm -pf查询到文件生成的安装包"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-7bab44d450ffd130.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="磁盘上是否每一个文件都来自安装包"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">不是每一个文件都来自安装包。</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-p rpmfile；针对尚未安装的程序包文件做查询操作</span><br><span class="line"></span><br><span class="line">有那个包所提供</span><br><span class="line">--whatprovides CAPABILITY;查询指定的CAPABILITY背那个包所依赖</span><br><span class="line">--provides:列出指定的程序包所提供的CAPABILITY[性能、能力]</span><br><span class="line">-R：查看指定的程序包所依赖的CAPABILITY</span><br></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-683fbc6baf746577.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="指定的能力所依赖的包、包具有的能力、指定的包所依赖的能力"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-8eab7888c5457634.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="bash所依赖的库"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rmp2cpio（rpm to cpio） 包文件|cpio -itv 预览包内文件</span><br><span class="line">rpm2cpio (rpm to cpio) 包文件|cpio -id &quot;*.conf&quot; 释放包内文件</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-a35b858177b839fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="rpm2copi命令预览、解包、解压缩进行安装、需注意文件元数据(权限之类)"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">【query-options】</span><br><span class="line">--changelog:查寻rpm包的changelog[变更日志，版本历史]</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-cc7de4e0f594b89b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="bash包更新历史查询"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">没有安装tree包,但可以查询tree安装列表，</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-2b34e1def2697869.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="两种查看tree安装包列表"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-c:查询程序的配置文件</span><br><span class="line">-d:查询程序的文档</span><br><span class="line">-i:information</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-cd0e67cffde0d4c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查询文件列表信息"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-l:查询指定的程序安装后生成的所有文件</span><br><span class="line">--scripts:程序包自带的脚本</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-7cf63c7a6ab4132f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查询包相关的脚本"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">-qi packege, -qf file, -qc package, -ql package , -qd package</span><br><span class="line"></span><br><span class="line">-qpi package_file , -qpl package_file</span><br><span class="line">-qa</span><br><span class="line">包卸载：</span><br><span class="line">rpm &#123;-e| --erase&#125;[--allmatches][--nodeps][--noscripts][--notriggers][--test]package_name..</span><br><span class="line"></span><br><span class="line">rpm &#123; - e |——消除&#125;[——allmatches][——nodeps][——noscript][——被重置为notrigger][——测试]package_name . .</span><br><span class="line"></span><br><span class="line">包效验（查看属性变化）</span><br><span class="line">rpm &#123;-V|--verify&#125; [select-options] [verify-options]</span><br><span class="line">S file Size differs</span><br><span class="line">M Mode differs (includes permissions and file type)</span><br><span class="line">5 digest (formerly MD5 sum) differs</span><br><span class="line">D Device major/minor number mismatch</span><br><span class="line">L readLink(2) path mismatch</span><br><span class="line">U User ownership differs</span><br><span class="line">G Group ownership differs</span><br><span class="line">T mTime differs</span><br><span class="line">P capabilities differ</span><br><span class="line">rpm &#123; - v |——验证&#125;[选项][verify-options]</span><br><span class="line">年代文件大小不同</span><br><span class="line">M模式不同(包括权限和文件类型)</span><br><span class="line">5摘要(前MD5和)不同</span><br><span class="line">D设备/小数字不匹配</span><br><span class="line">L指向(2)路径不匹配</span><br><span class="line">U用户拥有不同</span><br><span class="line">G组所有权不同</span><br><span class="line">T mTime不同</span><br><span class="line">P能力不同</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-85566ff6f435894f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="定期查看指定文件变化"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">也可以查看所有文件属性变化，(-va）命令</span><br></pre></td></tr></table></figure></p>
<ul>
<li>安装软件包效验<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">包来源合法性验证及完整性验证</span><br><span class="line">完整性验证：SHA256</span><br><span class="line">来晕啊合法性验证：RSA</span><br><span class="line">公钥加密</span><br><span class="line">对称加密：加密,解密使用同一个秘钥</span><br><span class="line">非对称加密：密钥是成对儿的</span><br><span class="line">pablic key:公钥，公开所有人</span><br><span class="line">secret key:私钥，不能公开</span><br><span class="line">导入所需要公钥</span><br><span class="line">rpm -k|checksig rpmfile 检查包的完整性和签名</span><br><span class="line">rpm--import /etc/pki/rpm-gpg/rpm-gpg-key-Centos-7</span><br><span class="line">Centos7发行版光盘提供：RPM-GPG-KEY-Centos7</span><br><span class="line">rpm -qa &quot;gpg -pubkey*&quot;</span><br><span class="line">查看是否是厂家出厂原安装包，-K</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-8f316340d829ddcf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="缺少检查工具，md5 not ok"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-ff6ead52ab5d2205.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="导入密钥，检测,md5 ok"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">卸载蜜钥，查询装好的蜜钥</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-8d67079fe7a57641.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查询蜜钥、卸载"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-fa1307ca0d3c025f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="光盘与磁盘的蜜钥位置"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-72b2d979727ea272.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="消除报警，导入蜜钥"></p>
<ul>
<li><p>rpm数据库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">数据库重建：</span><br><span class="line">/var/lib/rpm</span><br><span class="line">rpm&#123;--initdb|--rebuilddb&#125;</span><br><span class="line">initdb:初始化</span><br><span class="line">如果事先不存在数据库，新建之</span><br><span class="line">否则，不执行任何操作</span><br><span class="line">rebuilddb；重建已安装的包头的数据库索引目录</span><br><span class="line">！数据库初始化及重建数据都为空，没有意义。</span><br></pre></td></tr></table></figure>
</li>
<li><p>3、库文件移动后的修复过程<br><img src="http://upload-images.jianshu.io/upload_images/6132998-f82fc91abebf98b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="lib64，如ls、cat、bc、cp……通用lib64库，节约空间。不能随意移动库文件否则将无法运用外部命令"></p>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-f9eeff69bca12e89.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="用mv命令移动库文件后，无法重新启动系统。centos6无法运用图形界面"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">不使用快照的情况下，修复移除lib64库文件导致系统无法启动故障，在VMware下的修复方法。</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-0599d6b0f985a32f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="重新启动客户机，用光盘进救援模式"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">客户机重新启动后，运行光盘，当进度条走动的瞬间按一次Esc键，进入选项界面。（只能按一次，不能重复）</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-bc94d398134e695b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="选择第三项"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-c90d71e50ec42636.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="选择第三项，救援模式"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-dc70351d77e096b5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="选择语言，默认即可"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-231a20153ad44f3a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="不需要配置网络，选择NO"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-461c3e1c73333564.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="继续 只读 忽略 高级"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-81cc7f009ec8c90e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="初始安装系统时挂载点为根、救援模式时挂载点为/mnt/sysimares."></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-b298523447631eab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="进行下一步，回车得到一个shell，打开字符界面，更改根的位置。当前根位置为/mnt/sysimages,将其改为/，需在字符界面下执行命令 #chroot /mnt/sysmages."></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-9e94ce46a9f2a9cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="您的系统安装在/mn/sysimage目录下"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-03656c0411a560b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="开shell,进入字符界面"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-0939d91a8d3a9ec5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="输入#pwd命令显示当前为“/”，“/”为伪根、真正的根为/mnt/sysimage/。将lib64库文件移动还原，执行命令#chroot /mnt/sysimages可以切根“/”。"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-66f411b75f9d8f56.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="将库文件还原到lib64下，输入exit 退出"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-1da5e541f9d4d9e1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="重启，复原。"></p>
<ul>
<li><p>centos7移动lib64库文件，并进行修复。（类似centos6操作）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1、重新启动客户机</span><br><span class="line">2、光盘引导进入</span><br><span class="line">3、按ESC键进入</span><br><span class="line">4、选择第三项，检测排错</span><br><span class="line">5、选择第二项，进入救援模式</span><br><span class="line">6、选择1回车</span><br><span class="line">7、c继续</span><br><span class="line">8、回车开启shell</span><br><span class="line">9、不能切根，移动回复lib64库文件</span><br></pre></td></tr></table></figure>
</li>
<li><p>4、卸载内核后，Linux没有启动菜单项，系统无法启动。修复过程；</p>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-fc7881c0292ee63f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="没有Linux启动项"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">进入救援模式</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-2db0f7a041d04faa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="挂在光盘"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-838ced63e8a8c7c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="安装内核"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-6dd96691fcee129b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="切换到根"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-d88abadd1e7a7f52.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="强行安装内核"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-6feec0affdf1f56d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="xx"></p>
]]></content>
      
        
        <tags>
            
            <tag> rpm </tag>
            
            <tag> lib64库文件，内核修复 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[修复MBR分区]]></title>
      <url>/2018/01/08/%E4%BF%AE%E6%94%B9MBR%E5%88%86%E5%8C%BA/</url>
      <content type="html"><![CDATA[<pre><code>1、准备工作将/dev/sda磁盘的MBR分区备份到、root目录下mbr文件   中，备份centos6整个虚拟机；
[root@centos6 ~]# dd if=/dev/sda of=mbr bs=1 count=512;
[root@centos6 ~]# hexdump -C -n 512 /dev/sda
[root@centos6 ~]# hexdump -C -n 512 mbr
2、拷贝完成后查看mbr中内容是否齐全；
3、清除/dev/sda、磁盘的MBR分区512字节；
[root@centos6 ~]# dd if=/dev/zero of=/dev/sda bs=1 count=512
[root@centos6 ~]# hexdump -C -n 512 /dev/sda
4、查看/dev/sda磁盘512字节有无变化；
5、重新启动虚拟机，看是否能启用：
[root@centos6 ~]# reboot
6、救援模式无法修复；
7、无法修复后，启用备份文件夹中的centos6;
8、成功启动centos6后，查看磁盘分布：
[root@centos6 ~]# lsblk
[root@centos6 ~]# ls /dev/sd*
[root@centos6 ~]# blkid
[root@centos6 ~]# cat /proc/partitions
9、从破损的虚拟机上找到破损的磁盘路径及文件；
# 查找时间上最近的虚拟磁盘文件；
10、将破损的虚拟机磁盘挂载到已开启centos6上;
# 添加硬盘、选择现有虚拟磁盘选项、浏览、挂载；
11、重新启动centos6；
12、找到破损磁盘名称及centos6磁盘名称；
13、查看centos6磁盘和破损磁盘分区MBR；
[root@centos6 ~]# lsblk
[root@centos6 ~]# blkid
14、用centos6磁盘来修复破损的磁盘；
[root@centos6 ~]# dd if=/dev/sda of=/dev/sdb bs=1 count=512
15、关闭centos6，卸载修复的磁盘；
[root@centos6 ~]# init 0
16、开启已修复的centos6，看是否能够正常运行；
17、移除复制备份的centos6；
18、修复完成；
</code></pre><p><img src="http://upload-images.jianshu.io/upload_images/6132998-b98f6d3db9bc80d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Centos6"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-dcad0d2fb69be177.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="将/dev/sda的MBR分区备份到mbr文件中"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-4f0c7fa194a185a8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="破坏/dev/sda"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-76112f24595a7a9e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看MPR分区二进制文件"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-c0d79cca6a561f68.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看磁盘状态"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-754a12716017e3c8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="
![启用复制备份的Centos6](http://upload-images.jianshu.io/upload_images/6132998-b07c031fbd698a9a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)
"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-1f67ca56c781a0d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看磁盘状态及二进制mpr文件"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-868a3fd44fc382bb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加破坏的虚拟机磁盘"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-f767b782448f32a7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="浏览选择破损的虚拟机光盘"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-2a43b82170e2fe04.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="选择最近时间最大的虚拟机光盘"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-4ea526028a7179ec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="没有显示破坏的虚拟机磁盘重新启动虚拟机"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-8bef0a4442cb195b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="重启Centos6"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-2693403153d0694f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看磁盘分区"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-d2ea7d995abc4a98.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修复破损的虚拟机磁盘"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-2ae1943f55e29f64.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="关闭centos6"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-5f5f3083627220f4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修复完成后，正常启动"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-1767fe513f9ef2c6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="结构图"></p>
<p>######MBR<br>    MBR<br>    0 磁道0 扇区：512bytes<br>    446bytes: boot loader<br>    64bytes ：分区表<br>    16bytes:  标识一个分区<br>    2bytes: 55AA</p>
<pre><code>破坏boot loader引导启动程序；
[root@centos6 ~]# dd if=/dev/zero of=/dev/sda bs=1 count=446
[root@centos6 ~]# dd if=mbr of=/dev/sda bs=1 count=446
破坏分区表及修复；
[root@centos6 ~]# dd if=/dev/zero of=/dev/sda bs=1 count=64 skip=446 seek=446
[root@centos6 ~]# dd if=mbr of=/dev/sda bs=1 count=64 skip=446 seek=446
破坏尾标55AA及修复；
[root@centos6 ~]# dd if=/dev/zero of=/dev/sda bs=1 chount=2 skip=510 seek=510
[root@centos6 ~]# dd if=mbr of=/dev/sda bs=1 count=2 skip=510 seek=510
</code></pre>]]></content>
      
        
        <tags>
            
            <tag> 修复MBR分区，故障处理 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Centos6,7修改密码]]></title>
      <url>/2018/01/08/Centos6%EF%BC%8C7%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/</url>
      <content type="html"><![CDATA[<p><strong>更改roor管理员UID为非零时，centos6、centos7无法正常启动。重启centos6、centos7时系统运行不一样。</strong></p>
<p><strong>一、Centos6</strong></p>
<p>1、centos6用户root地址更改为2000，ctrl+x/y进行保存。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-7c130da7c17a569b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>2、更改root用户（UID)地址为2000，进行保存。在SecureCRT上从新开启centos6端口，无法连接centos6。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-e33b20b8ee16b228.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>3、在VMwere上切换centos6新端口时，用户无法登入。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-c59fc3be995db516.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>4、用户无法登入与链接，系统处于故障状态。重启VMwere上的centos6→快速点击A键，进入编辑界面。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-047c7100cf257e07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>5、输入命令init=/bin/bash回车。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-02bafa043649bd8e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>6、输入命令mount -o remount,rw /  回车。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-e2843699c403585f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>7、输入命令nano /etc/passwd，更改root地址UID为0，ctrl+x/y进行保存。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-1996b32850346b7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-b3f71a61489de884.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>8、重新启动centos6.</p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-ebdc9c58dbfcb8c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><strong>二、Centos7</strong></p>
<p>1、centos7用户root地址更改为2000，ctrl+x/y进行保存。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-05c1adbbc1f24212.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>2、root用户无法登，系统处于故障状态。重启VMwere上的centos7→快速点击E键，进入编辑界面。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-5059bea0bd2a2c3d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>3、输入命令init=/bin/bash、按ctrl+x键进行下一步。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-79eb6e3072e39c19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>4、输入命令mount -o remount,rw /  回车。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-1b18a084fb8502fa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>5、输入命令nano /etc/passwd。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-f786db0f75eca9d1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>6、更改root地址UID为0，ctrl+x/y进行保存。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-5b86ad56ca0311ae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>7、重新启动centos7。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-709ee43b30f30585.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>Centos6重新启动成功,修复完成。</p>
]]></content>
      
        
        <tags>
            
            <tag> centos6 </tag>
            
            <tag> 7修改密码，故障修复 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vim编辑器]]></title>
      <url>/2018/01/08/vim%E7%BC%96%E8%BE%91%E5%99%A8/</url>
      <content type="html"><![CDATA[<h4 id="vim的三种主要模式；"><a href="#vim的三种主要模式；" class="headerlink" title="vim的三种主要模式；"></a>vim的三种主要模式；</h4><p>命令模式、插入模式、扩展模式</p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-6871e6d74f94b805.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><strong>1、终端输入</strong> →  <strong>命令模式：</strong></p>
<p>vim /option/… 进入命令模式，光标默认行首。</p>
<p>vim +n /option/…进入命令模式，光标锁定第n行、行首。</p>
<p>vim +/^… /option/…进入命令模式，光标锁定已选定的第一个字符为行首。</p>
<p>vim + /option/…进入命令模式，光标锁定段尾行的第一个字符为行首。</p>
<p><strong>2、命令模式  </strong>→  <strong>插入模式：</strong></p>
<p>i：进入插入模式，光标位置，进行编辑。</p>
<p>a：进入插入模式，光标后一位，进行编辑。</p>
<p>o：进入插入模式，在光标位置下，添加一个新行。</p>
<p>I：进入插入模式，在光标所在的行首输入。</p>
<p>A：进入插入模式，在光标所在的行尾输入。</p>
<p>O：进入插入模式，在光标上一行，行首输入。</p>
<p>Esc键—–退出插入模式—–进入命令模式。</p>
<p><strong>3.1、命令模式 </strong> → <strong> 扩展模式：</strong></p>
<p>Shfit 加：键 …..进入扩展模式   ；</p>
<p>Esc、Enter键——退出扩展模式；</p>
<p><strong>3.2、终端输入</strong>→<strong>扩展模式:</strong></p>
<p>ex  /option/ :进入扩展模式</p>
<p><strong>3.3、扩展模式：</strong></p>
<p>：r————–在扩展模式下将读到文件内容输入到当前文件中。</p>
<p>：w————-在扩展模式下将当前文件内容写入另一个文件中。</p>
<p>：！————在扩展模式下输入！（command）回车，显示命令执行结果，再回车回到命令模式                        界面。</p>
<p>：r！———–在扩展模式下输入r！（command）回车，将命令内容读入到当前文件中。</p>
<p><strong>4、退出vim:</strong></p>
<p>：q ————-在没有进行修改操作时，进入扩展模式输入q退出。</p>
<p>：q! ————在操作时进行了输写修改，不想保存时进入扩展模式输入q!强行退出。</p>
<p>：wq ———–保存退出。</p>
<p>：wq!———–强制保存退出。</p>
<p>：x —————保存退出。</p>
<p>：ZZ————–在命令模式下，保存退出。</p>
<p>：ZQ————–在命令模式下，不保存退出。</p>
<h4 id="5、移动光标"><a href="#5、移动光标" class="headerlink" title="5、移动光标"></a>5、移动光标</h4><p>命令模式下移动光标；（只能在命令模式下移动光标）</p>
<p>← <strong>h 、</strong>↓ <strong>j、</strong> ↑<strong>k、</strong> →<strong> l    ：</strong>光标移动  左、下、上、右   </p>
<p>#h、#j、#k、#l、(#为数字)——执行#次命令（h、j、k、l）、移动#个字符。</p>
<p>w———-跳至下一个单词词首·。</p>
<p>W———-跳至下一个空格后单词词首。</p>
<p>b————跳至前一个单词词首.</p>
<p>B————跳至前第二个空格后词首。</p>
<p>H————跳至页首</p>
<p>M————跳至页中</p>
<p>L———— 跳至页尾</p>
<p>gg———–跳至文件首部，行首。</p>
<p>G————跳至文件尾部，行首。</p>
<p>：#———-跳至#行。</p>
<p>^————–跳至行首的第一个非空白符。</p>
<p>0（数字）–跳至行首。</p>
<p>$————–跳至行尾。</p>
<p>#G————跳至#指定行首。</p>
<p>1G、gg—–跳至第一行行首。</p>
<p>句间移动；</p>
<p>（————-跳至上一句。</p>
<p>）————-跳至下一句。</p>
<p>段落间移动；</p>
<p>{ ————-跳至上一段。</p>
<p>} ————-跳至下一段。</p>
<p>翻屏操作；</p>
<p>ctrl+B——–向首部翻屏</p>
<p>ctrl+F——–向尾部翻屏</p>
<p>ctrl+U——–向首部翻半屏</p>
<p>ctrl+D——–向尾部翻半屏</p>
<p><strong>6、命令界面操作，修改、删除、复制；</strong></p>
<p>x—————删除当前光标字符；</p>
<p>xp————-交换当前所在的字符与光标后面的字符；如：root、orot</p>
<p>~————–转换大小写；</p>
<p>J————–删除当前行的换行符；</p>
<p>r—————替换当前光标所在位置的字符；（输入的字符替换原有的字符）</p>
<p>R————–模式替换（REPLACE）</p>
<p>d($、0、^、w、b)—–删除</p>
<p>y($、0、^、w、b)——复制</p>
<p>c($、0、^、w、b)——修改</p>
<p>p——————————粘贴</p>
<p><strong>7、扩展模式，地址定界、查找、替换</strong></p>
<p>地址定界：（startpos,endpos）</p>
<h1 id="：—————————–第-行。"><a href="#：—————————–第-行。" class="headerlink" title="：—————————–第#行。"></a>：—————————–第#行。</h1><p>#，#：————————- 从左侧第#行到右侧第#行表示的行数。</p>
<p>#,+#：————————–从左侧第#行起，到加上右侧数字的行数。</p>
<p>.：——————————–当前行。</p>
<p>$：——————————-最后一行。</p>
<p>%：——————————全文，相当于1，$</p>
<p>/pat1/,/pat2/：—————–从第一次被/pat1/模式匹配到的行开始，一直到第一次被/pat2/匹配到的行结果。</p>
<p>查找  ：</p>
<p>/：（PATHERN）———–从当前光标处向文件尾部查找。</p>
<p>?：（PATHERN）———-从当前光标处向文件首部查找。</p>
<p>n、N —————————–辅助使用</p>
<p>查找并替换；</p>
<p>s：——————————–在扩展模式下完成查找替换操作。</p>
<pre><code>（s/查找模式/要替换成的内容/修饰符）
</code></pre><p>修饰符：</p>
<p>i：———————————忽略大小写</p>
<p>g:———————————–全局替换</p>
<p>多文件模式；</p>
<p>next：—————————–切换到下一个文件。</p>
<p>provious：———————–切换到上一个文件。</p>
<p>last：——————————切换到最后一个文件。</p>
<p>first：——————————切换到第一个文件。</p>
<p>wqall：—————————-保存所有文件。</p>
<p><strong>8、多窗口模式</strong></p>
<p>多文件：(vim -o a.txt b.txt……)</p>
<p>-o：——————————–水平分割</p>
<p>-O：——————————-垂直分割</p>
<p>在窗口间切换Ctrl+w,Arrow(上下左右箭头)</p>
<p>单文件；</p>
<p>Ctrl+w，s：———————水平分割</p>
<p>Ctrl+w，v：———————垂直分割</p>
<p>窗口属性定义；</p>
<p>set nu ：————————-显示行号</p>
<p>set nonu：———————–取消显示行号</p>
<p>set ai：—————————启用自动缩进功能</p>
<p>set noai：———————– 取消自动缩进功能</p>
<p>set ic：—————————忽略字符的大小写</p>
<p>set noic：————————不忽略字符的大小写</p>
<p>set sm：————————–括号匹配</p>
<p>set nosm:————————–取消括号匹配</p>
]]></content>
      
        
        <tags>
            
            <tag> vim编辑器 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Centos6半自动化安装.md]]></title>
      <url>/2018/01/08/Centos6%E5%8D%8A%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">安装kickstart包；</span><br><span class="line">启用kicstart生成应答文件（可以参考anaconda-ks.cfg）；</span><br><span class="line">准备http://172.16.0.1/centos/6网址,网络光盘；</span><br><span class="line">安装vsftpd服务，将kickstart生成的应答文件放置在ftp共享文件夹下；</span><br><span class="line">开启主机，网卡配置桥接模式；</span><br><span class="line">进入启动选项菜单，按ESC键，输入并调用应答文件；</span><br><span class="line"># linux ks=ftp://172.16.250.134/pub/centos6.cfg</span><br><span class="line">回车运行，开始安装系统；</span><br><span class="line">进入系统选项界面，并回车开启安装完成的系统；</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">安装kickstart 包；</span><br><span class="line">#yum -y install kickstart</span><br><span class="line">在图形界面下才支持打开；</span><br><span class="line">#system-config-start</span><br></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-a96c8470c494dcf5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网络安装；</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-dd68689cc023a580.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以给grub设置密码，防止单用户修改密码；</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-00debcc6c9a0dcbc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">磁盘分区；</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-48e49e6602866a74.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">清除mpr,不清除的话，机器上有mbr，会停在那里不运行；</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-80420ca418b23f5b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网络，自动获取ip；</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-54904ad82780789d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">验证方法，一般不动，基于SHA512验证；</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-5da7941cca5c2cb9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">防火墙，默认选择禁用SElinux；</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-1a97754e93f74c64.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择界面，初始化选项；</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-ebec5b30927a5666.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择安装包组；</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-8106c9f4c3f30f66.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择并写入脚本路径；</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-71dc7bc4b9d22ff8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">编写脚本创建用户，yum源，设置密码；</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-0cd01774824f65cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">存盘退出（保存到家目录），并查看家目录确认一下；</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-795d8aaf50cffd53.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">检查脚本格式；#ksvalidator  ks.cfg</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-6c41b26dc63aa77f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">将应答文件ks.cfg放到ftp上；</span><br><span class="line">将ks.cfg拷贝到/var/ftp/pub/目录下；</span><br><span class="line">检查是否安装ftp服务；</span><br><span class="line">#yum info vsftpd</span><br><span class="line">#rpm ql vsftpd</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-1bcb2f8e7960677b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">安装vsftp服务；</span><br><span class="line">#yum install vsftpd</span><br><span class="line">将文件拷贝到ftp共享目录下(/var/ftp/pub)；</span><br><span class="line">#cp ks.cfg /var/ftp/pub/</span><br><span class="line">启用vsftpd服务；</span><br><span class="line">#service vsftpd start</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-dad77b25e20e3491.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查看防火墙是否在关闭状态；</span><br><span class="line">#iptables -nvL</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-4ff2fd83ccd3cd11.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">关闭防火墙；</span><br><span class="line">#service iptables stop</span><br><span class="line">#service iptebles status</span><br><span class="line">#service vsftp status</span><br><span class="line">查看共享文件；</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-98d771faef3275d8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">应答文件安装完成；</span><br><span class="line">调用linux应答文件启动主机；</span><br></pre></td></tr></table></figure>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-4f170db6874c1136.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">点击光盘引导；</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-d75842ca9e80d15c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">点击ESC键；</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-48b331f2c6c49bf0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入调用应答文件；</span><br><span class="line">#linux ks=ftp://192.168.239.141/pub/centos6.cfg</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-eae3e264a35af500.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">主机使用桥接模式；</span><br><span class="line">使用网络光盘；http://172.16.0.1/centos/6</span><br><span class="line">仅主机模式下无法获取地址；</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-0f607581b7acf6e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">安装系统，已完成；</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-f5cbbc833729c93d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">三秒之内按任意键，选择启动系统选项菜单；</span><br></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-158043c240ac55bf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">启动成功；</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        
        <tags>
            
            <tag> Centos6半自动化安装 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Centos6手动安装步骤]]></title>
      <url>/2018/01/08/Centos6%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/</url>
      <content type="html"><![CDATA[<p>一、安装Centos6.9</p>
<p>1、选择磁盘空间足够大的本地磁盘，新建ISO、Centos6.9文件夹。将Centos映像光盘拷贝到ISO文件夹里，开启VMware 新建虚拟机。</p>
<p>选择经典 → 稍后安装操作系统 → 选择Linux操作系统 → Centos 64位 → 修改虚拟机名称 →更改虚拟机保存路径安装到指定的位置 → 设置磁盘大小200GB → 将虚拟磁盘存储为单个文件 → 点击完成→虚拟机创建完成;</p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-58ad8aea61bb2e5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-909b0432265fe9b2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-42c8ce93a0788bd8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-8459601e2cba1334.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-07fb53e506f8ce2b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>2、设置硬盘配置，安装操作系统。</p>
<p>（1）将硬件内存设置为2GB、处理器选择2个、网络适配器设置为仅主机模式、新建一个网络适配器设置为桥接模式。CD/DVD选择ISO文件夹中的Centos6文件、硬件设置完成。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-f44e4a1da252020d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>（2）开启虚拟机安装Centos6操作系统</p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-38b2250611f6065f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-2b167e59b7b041f3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-655e699ad4fd0389.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-7633180ca90ec6a1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-023998b3bd9808ae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-fa1ba8a57103525c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-5adc87529407683a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-e5389a4518a48a21.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-ba20d0e5b3799df7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-e608df4e68ae3f16.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-1d4bc35f12c08b7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-d48829e6d7b47d15.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-e4f9000dcea6d6e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-13d5e7d520f4d405.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-2ca63d015e15b6de.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-3e2eb7a3eecc6afb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-c07167098ef22f6d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-2aadf799b37109d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/6132998-6342f7400d2c1db6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
]]></content>
      
        
        <tags>
            
            <tag> Centos6手动安装步骤 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux系统调优]]></title>
      <url>/2018/01/07/LINUX%E8%B0%83%E4%BC%98/</url>
      <content type="html"><![CDATA[<h3 id="linux系统调优"><a href="#linux系统调优" class="headerlink" title="linux系统调优"></a>linux系统调优</h3><hr>
<ul>
<li>进程调度</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">os:</span><br><span class="line">硬件抽象，虚拟计算机</span><br><span class="line">system call---操作系统输出</span><br><span class="line">cpu：</span><br><span class="line">虚拟化，基于时序进行分段运行的，消耗时间片（time slice），</span><br><span class="line">某些进程优先级---打标签</span><br><span class="line">调度器：</span><br><span class="line">也是程序---内核中的进程调度子系统。</span><br><span class="line">调度器中的一种 CFS调度器</span><br><span class="line">调度器：Big O 算法</span><br><span class="line">O（1）从进程中选择一个进程所需要的时长时恒定的；调度进程，优先级。</span><br><span class="line">优先级分为两类：</span><br><span class="line">实时优先级--- 0-99</span><br><span class="line">静态优先级--- 100-139，用户可以手动指定nice值来调整优先级；</span><br><span class="line">Memory:内存</span><br><span class="line">虚拟地址空间</span><br><span class="line">PAE：</span><br><span class="line">32bits,4bits在32位的基础上加入4位变成现今的64G；</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">cpu调度</span><br><span class="line">0-139</span><br><span class="line">实时优先级；1-99---数值越大优先级越高</span><br><span class="line">动态优先级；100-139--数字越小优先级越高</span><br><span class="line"></span><br><span class="line">linux里调度器有多个不同的调度器；对于同一个进程由优先级较高的调度器进行调度；</span><br><span class="line">用户空间；调度器为CFS完全公平调度</span><br><span class="line">实时进程；调度器为SCHED_FIFO【0-99】</span><br><span class="line"></span><br><span class="line">类别；</span><br><span class="line">实时优先级调度；</span><br><span class="line">SCHED_FIFO ---调度器为先进先出 【0-99】---调度内核级别</span><br><span class="line">SCHED_RR ---轮询调度---同一种级别的进程有轮询的方式进行调度；</span><br><span class="line">用户空间调度；</span><br><span class="line">SCHED_NORMAL,SCHED_OTHER 【100-139】---完全公平调度</span><br><span class="line"></span><br><span class="line">cpu调度进行更改；</span><br><span class="line">动态优先级调度，用户空间调度；</span><br><span class="line">SCHED_FIFO,</span><br><span class="line">nice,renice</span><br><span class="line">实时优先级调度更改；</span><br><span class="line">SCHED_FIFO</span><br><span class="line"># chrt -f [1-99] /path/to/program arguments</span><br><span class="line">SCHED_RR;real-time</span><br><span class="line"># chrt -r [1-99] /path/to/program arguments</span><br></pre></td></tr></table></figure>
<ul>
<li>cpu绑定</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">strace 跟踪进程</span><br><span class="line"></span><br><span class="line">绑定cpu;</span><br><span class="line"># cat /proc/cpuinfo ---查看cpu个数类型</span><br><span class="line"># ps axo psr，comm ---显示哪个程序运在哪个CPU上，</span><br><span class="line"># ps axo psr,comm,pid---显示运行的进程及pid</span><br><span class="line">绑定qpidi进程的cpu</span><br><span class="line"># taskset -p -c 3  11215</span><br><span class="line"># ps axo psr，comm</span><br><span class="line">也可以绑定两个cpu</span><br><span class="line"># taskset -p -c 3,4  11215</span><br><span class="line"># ps axo psr，comm</span><br><span class="line"></span><br><span class="line">中断和IRQ调节，将cpu隔离出来专门记录中断信息；</span><br><span class="line">查看中断文件每个CPU的中断数；</span><br><span class="line"># cat /proc/interrupts--- cpu的io中断号</span><br><span class="line"># ls /proc/irp/---中断文件       </span><br><span class="line"># ls /proc/interrupts/0/---查看中断文件的中的绑定cpu的文件；</span><br><span class="line"># cat /proc/irp/0/smp_affinity</span><br><span class="line">ffffffff,ffffffff----一般情况下默认绑定格式；</span><br><span class="line"></span><br><span class="line">定义中断由第一个cpu处理绑定；</span><br><span class="line"># echo 1 &gt;/proc/irp/32/smp_affinity---定义32号中断由第一个CPU来处理</span><br><span class="line"># cat  /proc/irp/32/smp_affinity</span><br><span class="line">1</span><br><span class="line">要想将所有的中断号绑定在1号CPU需要脚本来实现；</span><br></pre></td></tr></table></figure>
<p>numa—服务实现自动绑定CPU;略<br>numa,numactl,numad<br>nice renlce 查文档</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">隔离CPU编辑配置文件；</span><br><span class="line">/etc/grub.conf</span><br><span class="line">内容尾部kernel后添加Isolcpus=cpu namber,cpu nameber (注意写上cpu的号码，0，1，2，3)</span><br><span class="line">定义中断smp_affinity；</span><br><span class="line"># echo cpunamber,...&gt;/proc/irp/#编号/smp_affinity/</span><br><span class="line">中断中使用的CPU是处Isolcpus外的CPU；</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">建议使用的监控工具CPU utilinzation;</span><br><span class="line">htop,dstat,glances,sar，sysdig(需要自己编译安装)</span><br><span class="line"># sar -p ALL 1 显示一秒钟所有使用率cpu</span><br><span class="line"># iostat -c 1 ---显示cpu的使用率；查看io状态命令，也可以查看cpu</span><br><span class="line"># uptime ---可以查看cpu使用率，平均负载情况；</span><br><span class="line"># vmstat 1 ----查看 procs运行队列和阻塞队列长度</span><br><span class="line">使用strace命令追踪进程查看所阻塞的进程；</span><br><span class="line">上述命令都是从/proc,/sys目录下剪切出来的，可以查看源文件；</span><br></pre></td></tr></table></figure>
<ul>
<li>linux 内存使用架构；</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">linux所有共享库都在/lib64目录下；</span><br><span class="line">进程调用此目录下的代码；</span><br><span class="line">DMA:</span><br><span class="line">cpu跟外部设备IO设备进行交互的方式；</span><br><span class="line">poll:轮询，忙等待；</span><br><span class="line">中断:</span><br><span class="line">由DMA：自带芯片发送起请求到cpu</span><br><span class="line"></span><br><span class="line">与cup相关的工具；代码级时编译安装编写脚本；评估系统性能；</span><br><span class="line">systemtap,oprofile,valgrind</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">内存；</span><br><span class="line">1、大页面和透明大页面；</span><br><span class="line">内存时由块管理，即众所周知的页面，一个页面由4096字节。1MB内存等于256个页面。1GB内存等于256000个页面等等。CPU有内嵌的内存管理单元，这些的单元包含这些页面列表，每个页面都是用页面条目参考；</span><br><span class="line">让系统管理大量内存有两种方法；</span><br><span class="line">-增加内存管理单元中页表数；</span><br><span class="line">-增加页面大小；</span><br><span class="line"> 第一种方法很昂贵，因为现代处理器中的硬件内存管理单元只支持数百或者书签页表条目。另外适用于管理书签页面（MB内存）硬件和内存算法可能无法很好的管理数百万（甚至数十亿）页面。这会造成性能问题；但程序需要使用比内存管理单元支持的更多的页面，该系统同会退回到缓慢的给予软件的内存管理，从而造成整个系统缓慢运行。</span><br><span class="line"></span><br><span class="line"> 红帽企业版LINUX6采用第二种方法，即使用超大页面。</span><br><span class="line"> 简单说，超大页面是2MB和1GB大小的内存模块。2MB使用的页表可管理多GB内存，而1GB页是TB内存的最佳选择。</span><br><span class="line"></span><br><span class="line"> 超大页面必须引导时分配。他们也很难受懂管理，且经常需要更改代码以便可以有效使用。因此红帽企业版LInux也部署了透明超大页（THP）。THP是一个提取城，可自动创建，管理和使用超大页面的大多数方案；</span><br><span class="line"></span><br><span class="line"> 使用Valgtind简要描述内存使用；C编译成精通编写可以研究；</span><br><span class="line"></span><br><span class="line"> 其他工具；systemtap,oprofile，vagraind都需要写脚本，红帽官方有systemtap使用。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、编译内核参数；</span><br><span class="line">    内存调优，proc文件系统的、proc/sys/vm目录中</span><br><span class="line">    （1）内存调优；memory过量使用，有三种类型；</span><br><span class="line">    overcommit_memory:有三种参数，分别为0,1,2 ；</span><br><span class="line">    0---默认设置。内核执行启发式内存过量使用处理，方法是估算可用内存量，并拒绝明显的无效的请求。遗憾的是因为存是使用启发式而非准确算法进行部署，这个设置有时可能会赵成系统中的可用内存超载。</span><br><span class="line">    1---内核执行无内存过量使用处理，使用之歌设置会增大内存超载的可能性，但也可以增强大量使用内存任务的性能。</span><br><span class="line">    2---内存拒绝等于或者大于总可用swap大小及overcommit_ratio指定的物理RAM比例的内存请求。如果您希望减小内存过度使用的风险，这个设置就是最好的；</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    2---模式中的overcommit_ratio为比例参数；</span><br><span class="line">    内存模式为，swap+RAM*overcommit_ratio磁盘使用大小；</span><br><span class="line">    已条有目的的话使用1模式，2模式将不在考虑范围；</span><br><span class="line"></span><br><span class="line">    配置文件；vim /etc/sysctl.conf当中尾部添加</span><br><span class="line">    vm.overcommit_memory = 1</span><br><span class="line">    保存以后使用sysctl -p命令执行；</span><br><span class="line">     (2)nr_hugepages大内存页；</span><br><span class="line">     规定在内存中配置的超大页数。默认为0。只有系统中有足够的连续可用页时方可分配（或者取消分配）超大页。为这个参数保留的页无法用于其他目的。安装文件</span><br><span class="line">     /usr/share/doc/kernel-doc-kernel_version/Documentation/vm/hugetlbpage.txt</span><br><span class="line"></span><br><span class="line">    查看大内存页使用情况；cat /proc/meminfo</span><br><span class="line">     AnonHugepages   110592 ---有内核自动使用维护的；透明匿名的大内存页；</span><br><span class="line">     Hugepages_Total 0   大内存页使用情况为没有使用</span><br><span class="line">     Hugepages_Free  0   </span><br><span class="line">     Hugepages_Rsvd  0</span><br><span class="line">     Hugepages_Surp  0</span><br><span class="line">     Hugepagesize    2048 大内存页的大小为两兆MB</span><br><span class="line"></span><br><span class="line">     配置大内存页；vim /etc/sysctl.conf当中尾部添加</span><br><span class="line">     vm.nr_hugepages = 10 ---添加10个内存页；</span><br><span class="line">     # sysctl -p ---运行一下</span><br><span class="line">     # cat /proc/meminfo ---查看内存页使用情况</span><br><span class="line"></span><br><span class="line">     也可以使用大内存页使用基于内存的文件系统；</span><br><span class="line">     将大内存页进行挂在文件系统实现；</span><br><span class="line">```     </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- 于容量相关的内核可调参数；</span><br></pre></td></tr></table></figure>
<p>位于参数proc文件系统中/proc/sys/kernel/目录中；<br>msgmax —消息队列；单个消息的大小。<br> -一字节为单规定消息队列中任意信息的最大允许大小。这个值一定不能超过该队列的大小（msgmnb）.默认值为65536字节；<br>msgmnb<br> -以字节为单位规定单一信息队列的最大值。默认为65536字节；<br>msgmni<br> -规定信息队列识别符的最大数量（以及队列的最大数量）。64位架构机器的默认值为1985；32位架机器的默认值为1736.</p>
<p>shmall —共享内存<br>  -字节位单位规定一次在该系统中可使用的共享内存总量。64位架构机器的默认值为4294967296；32位架构机器的默认值为268435456.<br>shmmax<br>  -以字节为单位规定内核可允许的最大共享内存片。64位架构机器的默认值为68719476736；32位架构机器的默认值为4294967295.注：单内核支持的值比这个值要多得多。<br>shmmni<br>  -规定系统范围内最大共享内存片段。在63位和32位架构机器中的默认值都是4096。<br>threads-max<br>  -规定一次内核使用的最大线程（任务）数。默认值与max_threads相同。使用的方程式是；<br>  max_threads=mempages / (8 * THREAD_SIZE / PAGE_SIZE)<br>  threads-max的最小值为20.</p>
<p>  shmmni * shmall =shmmax 多少片乘上片的大小等于总数大小；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">-与容量相关的文件系统可调参数；</span><br></pre></td></tr></table></figure></p>
<p>已下可调参数位于proc文件系统的/proc/sys/fs/目录中。<br>aio-max-nr<br> -规定在所有活动异步I/O上下文中可允许的最多事件数。默认值为65536。注：更改这个值不会预先分配或者重新定义内核数据结构的大小。</p>
<p> 使用nginx异步io时根据需求可以调大，消耗内存较大；</p>
<p> file-max<br>  -列出内核分配的文件数量的最大值。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- Out-of-Memory kill 可调用参数；</span><br></pre></td></tr></table></figure>
<p>  -内存不足（OOM）指的时所有可用内存，包括swap空间都已经被分配的计算状态。默认情况下，这个状态可赵成系统panic,并停止如预期般工作。当/proc/sys/vm/panic_on_oom参数设定为0会让内核在出现OOM时调用oom_killer功能。通常oom_killer可杀死偷盗进程，并让系统正常运行；</p>
<p>  可在每一个进程中设定一下参数，提高您对被oom_killer功能杀死的进程进行的控制。它位于proc文件系统中/proc/pid/目录下，其中pid是进程id.</p>
<p>  oom_adj<br>   -定义-16到15之间的一个数值以便帮助决定某进程的oom_score。oom_score值越高，被oom_killer杀死的进程数就越多。将oom_adj值设定为-17则为该进程禁用oom_killer。</p>
<pre><code>？写脚本获取id号进行赋值，或者手动执行；

 当内存耗尽时系统将消耗最大的进程kill掉。
</code></pre> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 调整虚拟内存</span><br><span class="line">虚拟内存</span><br></pre></td></tr></table></figure>
<p>```</p>
]]></content>
      
        
        <tags>
            
            <tag> Linux系统调优 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在github上搭建个人博客]]></title>
      <url>/2018/01/07/%E5%9C%A8github%E4%B8%8A%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<h1 id="在github上搭建-个人博客"><a href="#在github上搭建-个人博客" class="headerlink" title="在github上搭建 个人博客"></a>在github上搭建 个人博客</h1><ul>
<li>我的天啊  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我有一句吗卖批  不知当讲不当讲</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>There is a mmp in my hard , Do you have B number in your hard</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/user/bin/python</span><br><span class="line">print &quot;Hello, Your Mother is my Wife.&quot;;</span><br></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> github </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[xin]]></title>
      <url>/2018/01/07/xin/</url>
      <content type="html"><![CDATA[<p>这是一个测试页面</p>
]]></content>
      
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> text </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2018/01/07/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[文章名]]></title>
      <url>/2017/05/19/blog0/</url>
      <content type="html"><![CDATA[<ul>
<li>进程调度</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">os:</span><br><span class="line">硬件抽象，虚拟计算机</span><br><span class="line">system call---操作系统输出</span><br><span class="line">cpu：</span><br><span class="line">虚拟化，基于时序进行分段运行的，消耗时间片（time slice），</span><br><span class="line">某些进程优先级---打标签</span><br><span class="line">调度器：</span><br><span class="line">也是程序---内核中的进程调度子系统。</span><br><span class="line">调度器中的一种 CFS调度器</span><br><span class="line">调度器：Big O 算法</span><br><span class="line">O（1）从进程中选择一个进程所需要的时长时恒定的；调度进程，优先级。</span><br><span class="line">优先级分为两类：</span><br><span class="line">实时优先级--- 0-99</span><br><span class="line">静态优先级--- 100-139，用户可以手动指定nice值来调整优先级；</span><br><span class="line">Memory:内存</span><br><span class="line">虚拟地址空间</span><br><span class="line">PAE：</span><br><span class="line">32bits,4bits在32位的基础上加入4位变成现今的64G；</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">cpu调度</span><br><span class="line">0-139</span><br><span class="line">实时优先级；1-99---数值越大优先级越高</span><br><span class="line">动态优先级；100-139--数字越小优先级越高</span><br><span class="line"></span><br><span class="line">linux里调度器有多个不同的调度器；对于同一个进程由优先级较高的调度器进行调度；</span><br><span class="line">用户空间；调度器为CFS完全公平调度</span><br><span class="line">实时进程；调度器为SCHED_FIFO【0-99】</span><br><span class="line"></span><br><span class="line">类别；</span><br><span class="line">实时优先级调度；</span><br><span class="line">SCHED_FIFO ---调度器为先进先出 【0-99】---调度内核级别</span><br><span class="line">SCHED_RR ---轮询调度---同一种级别的进程有轮询的方式进行调度；</span><br><span class="line">用户空间调度；</span><br><span class="line">SCHED_NORMAL,SCHED_OTHER 【100-139】---完全公平调度</span><br><span class="line"></span><br><span class="line">cpu调度进行更改；</span><br><span class="line">动态优先级调度，用户空间调度；</span><br><span class="line">SCHED_FIFO,</span><br><span class="line">nice,renice</span><br><span class="line">实时优先级调度更改；</span><br><span class="line">SCHED_FIFO</span><br><span class="line"># chrt -f [1-99] /path/to/program arguments</span><br><span class="line">SCHED_RR;real-time</span><br><span class="line"># chrt -r [1-99] /path/to/program arguments</span><br></pre></td></tr></table></figure>
<ul>
<li>cpu绑定</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">strace 跟踪进程</span><br><span class="line"></span><br><span class="line">绑定cpu;</span><br><span class="line"># cat /proc/cpuinfo ---查看cpu个数类型</span><br><span class="line"># ps axo psr，comm ---显示哪个程序运在哪个CPU上，</span><br><span class="line"># ps axo psr,comm,pid---显示运行的进程及pid</span><br><span class="line">绑定qpidi进程的cpu</span><br><span class="line"># taskset -p -c 3  11215</span><br><span class="line"># ps axo psr，comm</span><br><span class="line">也可以绑定两个cpu</span><br><span class="line"># taskset -p -c 3,4  11215</span><br><span class="line"># ps axo psr，comm</span><br><span class="line"></span><br><span class="line">中断和IRQ调节，将cpu隔离出来专门记录中断信息；</span><br><span class="line">查看中断文件每个CPU的中断数；</span><br><span class="line"># cat /proc/interrupts--- cpu的io中断号</span><br><span class="line"># ls /proc/irp/---中断文件       </span><br><span class="line"># ls /proc/interrupts/0/---查看中断文件的中的绑定cpu的文件；</span><br><span class="line"># cat /proc/irp/0/smp_affinity</span><br><span class="line">ffffffff,ffffffff----一般情况下默认绑定格式；</span><br><span class="line"></span><br><span class="line">定义中断由第一个cpu处理绑定；</span><br><span class="line"># echo 1 &gt;/proc/irp/32/smp_affinity---定义32号中断由第一个CPU来处理</span><br><span class="line"># cat  /proc/irp/32/smp_affinity</span><br><span class="line">1</span><br><span class="line">要想将所有的中断号绑定在1号CPU需要脚本来实现；</span><br></pre></td></tr></table></figure>
<p>numa—服务实现自动绑定CPU;略<br>numa,numactl,numad<br>nice renlce 查文档</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">隔离CPU编辑配置文件；</span><br><span class="line">/etc/grub.conf</span><br><span class="line">内容尾部kernel后添加Isolcpus=cpu namber,cpu nameber (注意写上cpu的号码，0，1，2，3)</span><br><span class="line">定义中断smp_affinity；</span><br><span class="line"># echo cpunamber,...&gt;/proc/irp/#编号/smp_affinity/</span><br><span class="line">中断中使用的CPU是处Isolcpus外的CPU；</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">建议使用的监控工具CPU utilinzation;</span><br><span class="line">htop,dstat,glances,sar，sysdig(需要自己编译安装)</span><br><span class="line"># sar -p ALL 1 显示一秒钟所有使用率cpu</span><br><span class="line"># iostat -c 1 ---显示cpu的使用率；查看io状态命令，也可以查看cpu</span><br><span class="line"># uptime ---可以查看cpu使用率，平均负载情况；</span><br><span class="line"># vmstat 1 ----查看 procs运行队列和阻塞队列长度</span><br><span class="line">使用strace命令追踪进程查看所阻塞的进程；</span><br><span class="line">上述命令都是从/proc,/sys目录下剪切出来的，可以查看源文件；</span><br></pre></td></tr></table></figure>
<ul>
<li>linux 内存使用架构；</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">linux所有共享库都在/lib64目录下；</span><br><span class="line">进程调用此目录下的代码；</span><br><span class="line">DMA:</span><br><span class="line">cpu跟外部设备IO设备进行交互的方式；</span><br><span class="line">poll:轮询，忙等待；</span><br><span class="line">中断:</span><br><span class="line">由DMA：自带芯片发送起请求到cpu</span><br><span class="line"></span><br><span class="line">与cup相关的工具；代码级时编译安装编写脚本；评估系统性能；</span><br><span class="line">systemtap,oprofile,valgrind</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">内存；</span><br><span class="line">1、大页面和透明大页面；</span><br><span class="line">内存时由块管理，即众所周知的页面，一个页面由4096字节。1MB内存等于256个页面。1GB内存等于256000个页面等等。CPU有内嵌的内存管理单元，这些的单元包含这些页面列表，每个页面都是用页面条目参考；</span><br><span class="line">让系统管理大量内存有两种方法；</span><br><span class="line">-增加内存管理单元中页表数；</span><br><span class="line">-增加页面大小；</span><br><span class="line"> 第一种方法很昂贵，因为现代处理器中的硬件内存管理单元只支持数百或者书签页表条目。另外适用于管理书签页面（MB内存）硬件和内存算法可能无法很好的管理数百万（甚至数十亿）页面。这会造成性能问题；但程序需要使用比内存管理单元支持的更多的页面，该系统同会退回到缓慢的给予软件的内存管理，从而造成整个系统缓慢运行。</span><br><span class="line"></span><br><span class="line"> 红帽企业版LINUX6采用第二种方法，即使用超大页面。</span><br><span class="line"> 简单说，超大页面是2MB和1GB大小的内存模块。2MB使用的页表可管理多GB内存，而1GB页是TB内存的最佳选择。</span><br><span class="line"></span><br><span class="line"> 超大页面必须引导时分配。他们也很难受懂管理，且经常需要更改代码以便可以有效使用。因此红帽企业版LInux也部署了透明超大页（THP）。THP是一个提取城，可自动创建，管理和使用超大页面的大多数方案；</span><br><span class="line"></span><br><span class="line"> 使用Valgtind简要描述内存使用；C编译成精通编写可以研究；</span><br><span class="line"></span><br><span class="line"> 其他工具；systemtap,oprofile，vagraind都需要写脚本，红帽官方有systemtap使用。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、编译内核参数；</span><br><span class="line">    内存调优，proc文件系统的、proc/sys/vm目录中</span><br><span class="line">    （1）内存调优；memory过量使用，有三种类型；</span><br><span class="line">    overcommit_memory:有三种参数，分别为0,1,2 ；</span><br><span class="line">    0---默认设置。内核执行启发式内存过量使用处理，方法是估算可用内存量，并拒绝明显的无效的请求。遗憾的是因为存是使用启发式而非准确算法进行部署，这个设置有时可能会赵成系统中的可用内存超载。</span><br><span class="line">    1---内核执行无内存过量使用处理，使用之歌设置会增大内存超载的可能性，但也可以增强大量使用内存任务的性能。</span><br><span class="line">    2---内存拒绝等于或者大于总可用swap大小及overcommit_ratio指定的物理RAM比例的内存请求。如果您希望减小内存过度使用的风险，这个设置就是最好的；</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    2---模式中的overcommit_ratio为比例参数；</span><br><span class="line">    内存模式为，swap+RAM*overcommit_ratio磁盘使用大小；</span><br><span class="line">    已条有目的的话使用1模式，2模式将不在考虑范围；</span><br><span class="line"></span><br><span class="line">    配置文件；vim /etc/sysctl.conf当中尾部添加</span><br><span class="line">    vm.overcommit_memory = 1</span><br><span class="line">    保存以后使用sysctl -p命令执行；</span><br><span class="line">     (2)nr_hugepages大内存页；</span><br><span class="line">     规定在内存中配置的超大页数。默认为0。只有系统中有足够的连续可用页时方可分配（或者取消分配）超大页。为这个参数保留的页无法用于其他目的。安装文件</span><br><span class="line">     /usr/share/doc/kernel-doc-kernel_version/Documentation/vm/hugetlbpage.txt</span><br><span class="line"></span><br><span class="line">    查看大内存页使用情况；cat /proc/meminfo</span><br><span class="line">     AnonHugepages   110592 ---有内核自动使用维护的；透明匿名的大内存页；</span><br><span class="line">     Hugepages_Total 0   大内存页使用情况为没有使用</span><br><span class="line">     Hugepages_Free  0   </span><br><span class="line">     Hugepages_Rsvd  0</span><br><span class="line">     Hugepages_Surp  0</span><br><span class="line">     Hugepagesize    2048 大内存页的大小为两兆MB</span><br><span class="line"></span><br><span class="line">     配置大内存页；vim /etc/sysctl.conf当中尾部添加</span><br><span class="line">     vm.nr_hugepages = 10 ---添加10个内存页；</span><br><span class="line">     # sysctl -p ---运行一下</span><br><span class="line">     # cat /proc/meminfo ---查看内存页使用情况</span><br><span class="line"></span><br><span class="line">     也可以使用大内存页使用基于内存的文件系统；</span><br><span class="line">     将大内存页进行挂在文件系统实现；</span><br><span class="line">```     </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- 于容量相关的内核可调参数；</span><br></pre></td></tr></table></figure>
<p>位于参数proc文件系统中/proc/sys/kernel/目录中；<br>msgmax —消息队列；单个消息的大小。<br> -一字节为单规定消息队列中任意信息的最大允许大小。这个值一定不能超过该队列的大小（msgmnb）.默认值为65536字节；<br>msgmnb<br> -以字节为单位规定单一信息队列的最大值。默认为65536字节；<br>msgmni<br> -规定信息队列识别符的最大数量（以及队列的最大数量）。64位架构机器的默认值为1985；32位架机器的默认值为1736.</p>
<p>shmall —共享内存<br>  -字节位单位规定一次在该系统中可使用的共享内存总量。64位架构机器的默认值为4294967296；32位架构机器的默认值为268435456.<br>shmmax<br>  -以字节为单位规定内核可允许的最大共享内存片。64位架构机器的默认值为68719476736；32位架构机器的默认值为4294967295.注：单内核支持的值比这个值要多得多。<br>shmmni<br>  -规定系统范围内最大共享内存片段。在63位和32位架构机器中的默认值都是4096。<br>threads-max<br>  -规定一次内核使用的最大线程（任务）数。默认值与max_threads相同。使用的方程式是；<br>  max_threads=mempages / (8 * THREAD_SIZE / PAGE_SIZE)<br>  threads-max的最小值为20.</p>
<p>  shmmni * shmall =shmmax 多少片乘上片的大小等于总数大小；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">-与容量相关的文件系统可调参数；</span><br></pre></td></tr></table></figure></p>
<p>已下可调参数位于proc文件系统的/proc/sys/fs/目录中。<br>aio-max-nr<br> -规定在所有活动异步I/O上下文中可允许的最多事件数。默认值为65536。注：更改这个值不会预先分配或者重新定义内核数据结构的大小。</p>
<p> 使用nginx异步io时根据需求可以调大，消耗内存较大；</p>
<p> file-max<br>  -列出内核分配的文件数量的最大值。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- Out-of-Memory kill 可调用参数；</span><br></pre></td></tr></table></figure>
<p>  -内存不足（OOM）指的时所有可用内存，包括swap空间都已经被分配的计算状态。默认情况下，这个状态可赵成系统panic,并停止如预期般工作。当/proc/sys/vm/panic_on_oom参数设定为0会让内核在出现OOM时调用oom_killer功能。通常oom_killer可杀死偷盗进程，并让系统正常运行；</p>
<p>  可在每一个进程中设定一下参数，提高您对被oom_killer功能杀死的进程进行的控制。它位于proc文件系统中/proc/pid/目录下，其中pid是进程id.</p>
<p>  oom_adj<br>   -定义-16到15之间的一个数值以便帮助决定某进程的oom_score。oom_score值越高，被oom_killer杀死的进程数就越多。将oom_adj值设定为-17则为该进程禁用oom_killer。</p>
<pre><code>？写脚本获取id号进行赋值，或者手动执行；

 当内存耗尽时系统将消耗最大的进程kill掉。
</code></pre> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 调整虚拟内存</span><br><span class="line">虚拟内存</span><br></pre></td></tr></table></figure>
<p>```</p>
]]></content>
      
        <categories>
            
            <category> Life </category>
            
        </categories>
        
        
        <tags>
            
            <tag> tag1 </tag>
            
            <tag> tag2 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
